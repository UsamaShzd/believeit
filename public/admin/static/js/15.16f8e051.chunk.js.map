{"version":3,"sources":["components/Headers/Header.js","components/Inputs/Input.js","components/Inputs/MySelect.js","components/Inputs/RichEditor.js","pages/posts/PostForm.js","pages/posts/ModifyPost.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","props","a","createElement","className","fluid","children","MyInput","_ref","name","label","rest","Object","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_useFormikContext","useFormikContext","values","errors","touched","setFieldValue","value","error","classes","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","assign","autoComplete","onChange","e","target","MySelect","_ref$options","options","placeholder","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","concat","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_5__","type","style","color","console","log","map","option","k","key","editorConfiguration","mediaEmbed","previewsInData","RichEditor","_ref$className","objectWithoutProperties","react_default","FormGroup","Label","ckeditor","editor","ClassicEditor","config","activeClass","data","event","getData","PostForm","initialValues","onSubmit","formik_esm","validationSchema","Yup","shape","title","trim","min","max","required","youtubeVideo","when","is","then","htmlContent","enableReinitialize","_ref2","isSubmitting","submitForm","postType","Input","Fragment","Inputs_RichEditor","Button","disabled","onClick","ModifyPost","match","history","_useState","useState","image","description","_id","_useState2","slicedToArray","post","setPost","identifier","params","useEffect","loadPost","asyncToGenerator","regenerator_default","mark","_callee","id","res","wrap","_context","prev","next","http","get","url","sent","t0","t1","response","status","handleErrors","replace","basePath","abrupt","stop","_x","apply","this","arguments","submitHandler","_ref4","_callee2","body","_ref3","setSubmitting","setErrors","_res","_context2","put","finish","_x2","_x3","Header","Container","Card","CardHeader","CardBody","posts_PostForm"],"mappings":"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","file":"static/js/15.16f8e051.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n      <Container fluid>{props.children}</Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\n\nimport { useFormikContext } from \"formik\";\n\nconst MyInput = ({ name, label, ...rest }) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  const value = values[name];\n  const error = touched[name] && errors[name];\n  let classes = \" form-control form-control-alternative text-black\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <Input\n        {...rest}\n        className={classes}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\nexport default MyInput;\n","import React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { useFormikContext } from \"formik\";\n\nconst MySelect = ({\n  name,\n  label,\n  className,\n  options = [],\n  placeholder,\n  ...rest\n}) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n\n  const value = values[name];\n  const error = touched[name] && errors[name];\n  let classes = className + \" form-control form-control-alternative text-black\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n\n  if (placeholder) {\n    options = [{ label: placeholder || \"\", value: \"\" }, ...options];\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <Input\n        {...rest}\n        type=\"select\"\n        className={classes}\n        style={{ color: \"black\" }}\n        value={value}\n        onChange={(e) => {\n          console.log(e.target.value);\n          setFieldValue(name, e.target.value);\n        }}\n      >\n        {options.map((option, k) => (\n          <option key={k} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </Input>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\n{\n  /* <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n          <option>1</option>\n          <option>2</option>\n          <option>3</option>\n          <option>4</option>\n          <option>5</option>\n        </Input> */\n}\n\nexport default MySelect;\n","import React from \"react\";\nimport { FormGroup, Label } from \"reactstrap\";\n\nimport { useFormikContext } from \"formik\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst editorConfiguration = {\n  mediaEmbed: {\n    previewsInData: true,\n  },\n};\n\nconst RichEditor = ({ label, name, className = \"\", ...rest }) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  const value = values[name];\n  const error = touched[name] && errors[name];\n\n  let classes = className + \"\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <div className={classes}>\n        <CKEditor\n          editor={ClassicEditor}\n          config={editorConfiguration}\n          activeClass=\"border border-primary\"\n          data={value}\n          {...rest}\n          onChange={(event, editor) => {\n            setFieldValue(name, editor.getData());\n          }}\n        />\n      </div>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\nexport default RichEditor;\n","import React from \"react\";\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Button } from \"reactstrap\";\nimport Input from \"../../components/Inputs/Input\";\nimport MySelect from \"../../components/Inputs/MySelect\";\nimport RichEditor from \"../../components/Inputs/RichEditor\";\n\nconst PostForm = ({ initialValues, onSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={Yup.object().shape({\n        title: Yup.string().trim().min(5).max(150).required(),\n\n        type: Yup.string().trim().required(),\n\n        youtubeVideo: Yup.string().when(\"type\", {\n          is: \"youtube_video\",\n          then: Yup.string().required(),\n        }),\n\n        htmlContent: Yup.string().when(\"type\", {\n          is: \"blog\",\n          then: Yup.string().required(),\n        }),\n      })}\n      onSubmit={onSubmit}\n      enableReinitialize\n    >\n      {({ values, isSubmitting, submitForm }) => {\n        const postType = values.type;\n        return (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <Input\n                  label=\"Post Title\"\n                  name=\"title\"\n                  placeholder=\"Post Title...\"\n                />\n              </div>\n\n              <div className=\"col-12\">\n                <MySelect\n                  name=\"type\"\n                  label=\"Post Type\"\n                  options={[\n                    { label: \"Youtube Video\", value: \"youtube_video\" },\n                    { label: \"Blog\", value: \"blog\" },\n                  ]}\n                />\n              </div>\n              {postType === \"youtube_video\" && (\n                <div className=\"col-12\">\n                  <Input\n                    label=\"Youtube Video Id\"\n                    name=\"youtubeVideo\"\n                    placeholder=\"youtube video id\"\n                  />\n                </div>\n              )}\n\n              {postType === \"blog\" && (\n                <>\n                  <div className=\"col-12\"></div>\n                  <div className=\"col-12\">\n                    <Input\n                      label=\"Description\"\n                      name=\"description\"\n                      placeholder=\"description...\"\n                    />\n                  </div>\n                  <div className=\"col-12\"></div>\n                  <div className=\"col-12\">\n                    <RichEditor\n                      label=\"Content\"\n                      name=\"htmlContent\"\n                      className=\"w-100\"\n                    />\n                  </div>\n                </>\n              )}\n\n              <div className=\"col-12 text-center\">\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default PostForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Header from \"../../components/Headers/Header\";\nimport { basePath } from \"../../configs\";\nimport { handleErrors } from \"../../helpers/error\";\n\nimport http from \"../../services/http\";\n\nimport PostForm from \"./PostForm\";\n\nconst api_endpoint = \"/posts/\";\n\nconst ModifyPost = ({ match, history }) => {\n  const [post, setPost] = useState({\n    title: \"\",\n    type: \"youtube_video\",\n    youtubeVideo: \"\",\n    image: \"\",\n    description: \"\",\n    htmlContent: \"\",\n    _id: \"\",\n  });\n  const { identifier } = match.params;\n\n  useEffect(() => {\n    if (identifier !== \"add\" && identifier !== post._id) loadPost(identifier);\n  }, [identifier]);\n\n  const loadPost = async (id) => {\n    try {\n      const res = await http.get({ url: api_endpoint + identifier });\n      setPost(res.data);\n    } catch (err) {\n      switch (err.response.status) {\n        case 404:\n          handleErrors(\"Post not found!\");\n          history.replace(basePath + \"/posts/\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    }\n  };\n\n  const submitHandler = async (body, { setSubmitting, setErrors }) => {\n    try {\n      if (identifier === \"add\") {\n        const res = await http.post({ url: api_endpoint, body });\n        setPost(res.data);\n        history.replace(basePath + \"/posts/\" + res.data._id);\n      } else {\n        const res = await http.put({\n          url: api_endpoint + identifier,\n          body,\n        });\n        setPost(res.data);\n      }\n    } catch (err) {\n      switch (err.response.status) {\n        case 400:\n          setErrors(err.response.data.error);\n          break;\n        case 404:\n          handleErrors(\"This post is deleted\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\">\n        <Card className=\"shadow\">\n          <CardHeader>\n            <div className=\"clearfix\">\n              <h2 className=\"mb-0 float-left\">\n                {identifier === \"add\" ? \"Add Post\" : post.title}\n              </h2>\n            </div>\n          </CardHeader>\n          <CardBody className=\"bg-secondary\">\n            <PostForm\n              onSubmit={submitHandler}\n              initialValues={{\n                title: post.title,\n                type: post.type,\n                htmlContent: post.htmlContent,\n                youtubeVideo: post.youtubeVideo,\n              }}\n            />\n          </CardBody>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ModifyPost;\n"],"sourceRoot":""}