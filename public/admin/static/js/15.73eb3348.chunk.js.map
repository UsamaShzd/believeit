{"version":3,"sources":["components/Headers/Header.js","components/Inputs/Input.js","components/Inputs/MySelect.js","components/Inputs/RichEditor.js","components/Popups/ImagePicker.js","pages/posts/ModifyPost.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","props","a","createElement","className","fluid","children","MyInput","_ref","name","label","rest","Object","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_useFormikContext","useFormikContext","values","errors","touched","setFieldValue","value","error","classes","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","assign","autoComplete","onChange","e","target","MySelect","_ref$options","options","placeholder","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","concat","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_5__","type","style","color","console","log","map","option","k","key","editorConfiguration","mediaEmbed","previewsInData","RichEditor","_ref$className","objectWithoutProperties","react_default","FormGroup","Label","ckeditor","editor","ClassicEditor","config","activeClass","data","event","getData","ImagePicker","_props$onChange","_props$imagePreview","imagePreview","_useState","useState","_useState2","slicedToArray","previewImage","setPreviewImage","display","justifyContent","marginBottom","dist_es","onDrop","image","file","reader","FileReader","readAsDataURL","onloadend","result","bind","getRootProps","getInputProps","minHeight","minWidth","maxHeight","maxWidth","border","alignItems","src","textAlign","ModifyPost","match","history","title","youtubeVideo","description","htmlContent","_id","post","setPost","_useState3","_useState4","postImage","setPostImage","identifier","params","useEffect","loadPost","_ref2","asyncToGenerator","regenerator_default","mark","_callee","id","res","wrap","_context","prev","next","http","get","url","sent","t0","t1","response","status","handleErrors","replace","basePath","abrupt","stop","_x","apply","this","arguments","submitHandler","_ref4","_callee2","body","_ref3","setSubmitting","setErrors","imageRes","imageBody","_res","_context2","FormData","append","put","finish","_x2","_x3","Fragment","Header","Container","Card","CardHeader","CardBody","formik_esm","initialValues","validationSchema","Yup","shape","trim","min","max","required","when","is","then","onSubmit","enableReinitialize","_ref5","isSubmitting","submitForm","postType","thumbnailUrl","Input","Inputs_RichEditor","Button","disabled","onClick"],"mappings":"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","file":"static/js/15.73eb3348.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n      <Container fluid>{props.children}</Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\n\nimport { useFormikContext } from \"formik\";\n\nconst MyInput = ({ name, label, ...rest }) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  const value = values[name];\n  const error = touched[name] && errors[name];\n  let classes = \" form-control form-control-alternative text-black\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <Input\n        {...rest}\n        className={classes}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\nexport default MyInput;\n","import React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { useFormikContext } from \"formik\";\n\nconst MySelect = ({\n  name,\n  label,\n  className,\n  options = [],\n  placeholder,\n  ...rest\n}) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n\n  const value = values[name];\n  const error = touched[name] && errors[name];\n  let classes = className + \" form-control form-control-alternative text-black\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n\n  if (placeholder) {\n    options = [{ label: placeholder || \"\", value: \"\" }, ...options];\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <Input\n        {...rest}\n        type=\"select\"\n        className={classes}\n        style={{ color: \"black\" }}\n        value={value}\n        onChange={(e) => {\n          console.log(e.target.value);\n          setFieldValue(name, e.target.value);\n        }}\n      >\n        {options.map((option, k) => (\n          <option key={k} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </Input>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\n{\n  /* <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n          <option>1</option>\n          <option>2</option>\n          <option>3</option>\n          <option>4</option>\n          <option>5</option>\n        </Input> */\n}\n\nexport default MySelect;\n","import React from \"react\";\nimport { FormGroup, Label } from \"reactstrap\";\n\nimport { useFormikContext } from \"formik\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst editorConfiguration = {\n  mediaEmbed: {\n    previewsInData: true,\n  },\n};\n\nconst RichEditor = ({ label, name, className = \"\", ...rest }) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  const value = values[name];\n  const error = touched[name] && errors[name];\n\n  let classes = className + \"\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <div className={classes}>\n        <CKEditor\n          editor={ClassicEditor}\n          config={editorConfiguration}\n          activeClass=\"border border-primary\"\n          data={value}\n          {...rest}\n          onChange={(event, editor) => {\n            setFieldValue(name, editor.getData());\n          }}\n        />\n      </div>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\nexport default RichEditor;\n","import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nexport default (props) => {\n  const { onChange = () => {}, imagePreview = \"\" } = props;\n  const [previewImage, setPreviewImage] = useState(imagePreview);\n\n  const onImageDrop = (image) => {\n    var file = image[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = function (e) {\n      setPreviewImage(reader.result);\n    }.bind(this);\n\n    if (onChange) onChange(image);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        marginBottom: \"5px\",\n      }}\n    >\n      <Dropzone onDrop={onImageDrop}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div\n                style={{\n                  minHeight: \"180px\",\n                  minWidth: \"180px\",\n                  maxHeight: \"300px\",\n                  maxWidth: \"400px\",\n                  border: \"3px dashed #ccc\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {previewImage !== null ? (\n                  <img src={previewImage} className=\"w-100\" />\n                ) : (\n                  <p\n                    style={{\n                      textAlign: \"center\",\n                      color: \"#ccc\",\n                      maxWidth: \"200px\",\n                    }}\n                  >\n                    Drag 'n' drop image here, or click to select image\n                  </p>\n                )}\n              </div>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n};\n\n// import React, { Component } from \"react\";\n// import { Modal, Button, ProgressBar } from \"react-bootstrap\";\n// import Dropzone from \"react-dropzone\";\n// import Cropper from \"react-cropper\";\n// import \"cropperjs/dist/cropper.css\";\n// import { dataURLtoFile } from \"../helpers/image\";\n// import mediaHttp from \"../http/media\";\n// import { handleHttpErrors } from \"../helpers/error\";\n// class ImagePicker extends Component {\n//   state = {\n//     image: null,\n//     imagePreview: null,\n//     showPicker: false,\n//     isChanged: false,\n//     isUploading: false,\n//     uploadProgress: 0,\n//   };\n\n//   showPicker = () => {\n//     this.setState({ showPicker: true });\n//   };\n\n//   hidePicker = () => {\n//     this.setState({ showPicker: false });\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       image: null,\n//       imagePreview: null,\n//       showPicker: false,\n//       isChanged: false,\n//       isUploading: false,\n//       uploadProgress: 0,\n//     });\n//   };\n//   onImageDrop = (image) => {\n//     var file = image[0];\n//     var reader = new FileReader();\n//     reader.readAsDataURL(file);\n//     reader.onloadend = function (e) {\n//       this.setState({ imagePreview: reader.result });\n//     }.bind(this);\n\n//     this.setState({ image: file, isChanged: true });\n//   };\n\n//   onSave = async () => {\n//     const { isChanged, image } = this.state;\n//     const { onSave } = this.props;\n//     if (!isChanged) return;\n\n//     const dataUrl = this.cropper.current.getCroppedCanvas().toDataURL();\n//     const fileObj = dataURLtoFile(dataUrl, image.name);\n//     const media = await this.uploadToServer(fileObj);\n//     if (!media) return;\n//     if (onSave) onSave(media);\n//   };\n\n//   uploadToServer = async (image) => {\n//     const formData = new FormData();\n//     formData.append(\"image\", image);\n//     try {\n//       this.setState({ isUploading: true, uploadProgress: 0 });\n//       const res = await mediaHttp.uploadImage(formData, this.onUploadProgress);\n//       return res.data;\n//     } catch (err) {\n//       handleHttpErrors(err);\n//     } finally {\n//       this.setState({ isUploading: false });\n//     }\n//     return null;\n//   };\n\n//   onUploadProgress = (progressEvent) => {\n//     var percentCompleted = Math.round(\n//       (progressEvent.loaded * 100) / progressEvent.total\n//     );\n//     this.setState({ uploadProgress: percentCompleted });\n//     console.log(percentCompleted);\n//   };\n//   cropper = React.createRef();\n\n//   render() {\n//     const {\n//       showPicker,\n//       isChanged,\n//       imagePreview,\n//       uploadProgress,\n//       isUploading,\n//     } = this.state;\n//     const { title, aspectRatio = 16 / 9 } = this.props;\n//     return (\n//       <div className=\"image-picker\">\n//         <Modal show={showPicker} onHide={() => {}}>\n//           <Modal.Header>\n//             <Modal.Title>{title || \"Pick Image\"}</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             {imagePreview && (\n//               <Cropper\n//                 viewMode={1}\n//                 zoomable={false}\n//                 ref={this.cropper}\n//                 src={imagePreview}\n//                 style={{ width: \"100%\", marginBottom: \"10px\", height: \"380px\" }}\n//                 aspectRatio={aspectRatio}\n//                 guides={false}\n//               />\n//             )}\n\n//             <Dropzone onDrop={this.onImageDrop}>\n//               {({ getRootProps, getInputProps }) => (\n//                 <section>\n//                   <div {...getRootProps()}>\n//                     <input {...getInputProps()} />\n//                     <div\n//                       style={{\n//                         height: \"60px\",\n//                         border: \"3px dashed #ccc\",\n//                         display: \"flex\",\n//                         alignItems: \"center\",\n//                         justifyContent: \"center\",\n//                       }}\n//                     >\n//                       <p style={{ textAlign: \"center\", color: \"#ccc\" }}>\n//                         Drag 'n' drop image here, or click to select image\n//                       </p>\n//                     </div>\n//                   </div>\n//                 </section>\n//               )}\n//             </Dropzone>\n//             {isUploading && (\n//               <ProgressBar now={uploadProgress} style={{ marginTop: \"10px\" }} />\n//             )}\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={this.hidePicker}>\n//               Cancel\n//             </Button>\n//             <Button\n//               variant=\"primary\"\n//               disabled={!isChanged || isUploading}\n//               onClick={this.onSave}\n//             >\n//               Save Changes\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </div>\n//     );\n//   }\n// }\n\n// export default ImagePicker;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Header from \"../../components/Headers/Header\";\nimport { basePath } from \"../../configs\";\nimport { handleErrors } from \"../../helpers/error\";\n\nimport http from \"../../services/http\";\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Input from \"../../components/Inputs/Input\";\nimport MySelect from \"../../components/Inputs/MySelect\";\nimport RichEditor from \"../../components/Inputs/RichEditor\";\n\nimport ImagePicker from \"../../components/Popups/ImagePicker\";\n\nconst api_endpoint = \"/posts/\";\n\nconst ModifyPost = ({ match, history }) => {\n  const [post, setPost] = useState({\n    title: \"\",\n    type: \"youtube_video\",\n    youtubeVideo: \"\",\n    image: \"\",\n    description: \"\",\n    htmlContent: \"\",\n    _id: \"\",\n  });\n\n  const [postImage, setPostImage] = useState(null);\n\n  const { identifier } = match.params;\n\n  useEffect(() => {\n    if (identifier !== \"add\" && identifier !== post._id) loadPost(identifier);\n  }, [identifier]);\n\n  const loadPost = async (id) => {\n    try {\n      const res = await http.get({ url: api_endpoint + identifier });\n      setPost(res.data);\n    } catch (err) {\n      switch (err.response.status) {\n        case 404:\n          handleErrors(\"Post not found!\");\n          history.replace(basePath + \"/posts/\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    }\n  };\n\n  const submitHandler = async (body, { setSubmitting, setErrors }) => {\n    try {\n      let imageRes;\n\n      if (body.type === \"blog\" && postImage !== null) {\n        const imageBody = new FormData();\n        imageBody.append(\"image\", postImage);\n        imageRes = await http.post({\n          url: \"/media/image\",\n          body: imageBody,\n        });\n\n        body.image = imageRes.data._id;\n      }\n\n      if (identifier === \"add\") {\n        const res = await http.post({ url: api_endpoint, body });\n        setPost(res.data);\n        history.replace(basePath + \"/posts/\" + res.data._id);\n      } else {\n        const res = await http.put({\n          url: api_endpoint + identifier,\n          body,\n        });\n        setPost(res.data);\n      }\n\n      setPostImage(null);\n    } catch (err) {\n      switch (err.response.status) {\n        case 400:\n          setErrors(err.response.data.error);\n          break;\n        case 404:\n          handleErrors(\"This post is deleted\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const renderPostForm = () => {\n    return (\n      <Formik\n        initialValues={{\n          title: post.title,\n          type: post.type,\n          htmlContent: post.htmlContent,\n          youtubeVideo: post.youtubeVideo,\n          description: post.description,\n        }}\n        validationSchema={Yup.object().shape({\n          title: Yup.string().trim().min(5).max(150).required(),\n\n          type: Yup.string().trim().required(),\n\n          youtubeVideo: Yup.string().when(\"type\", {\n            is: \"youtube_video\",\n            then: Yup.string().required(),\n          }),\n\n          htmlContent: Yup.string().when(\"type\", {\n            is: \"blog\",\n            then: Yup.string().required(),\n          }),\n        })}\n        onSubmit={submitHandler}\n        enableReinitialize\n      >\n        {({ values, isSubmitting, submitForm }) => {\n          const postType = values.type;\n          return (\n            <Form>\n              <div className=\"row\">\n                {postType === \"blog\" && (\n                  <div className=\"col-12\">\n                    <ImagePicker\n                      imagePreview={post.image.thumbnailUrl}\n                      onChange={(image) => {\n                        setPostImage(image[0]);\n                      }}\n                    />\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <Input\n                    label=\"Post Title\"\n                    name=\"title\"\n                    placeholder=\"Post Title...\"\n                  />\n                </div>\n\n                <div className=\"col-12\">\n                  <MySelect\n                    name=\"type\"\n                    label=\"Post Type\"\n                    options={[\n                      { label: \"Youtube Video\", value: \"youtube_video\" },\n                      { label: \"Blog\", value: \"blog\" },\n                    ]}\n                  />\n                </div>\n                {postType === \"youtube_video\" && (\n                  <div className=\"col-12\">\n                    <Input\n                      label=\"Youtube Video Id\"\n                      name=\"youtubeVideo\"\n                      placeholder=\"youtube video id\"\n                    />\n                  </div>\n                )}\n\n                {postType === \"blog\" && (\n                  <>\n                    <div className=\"col-12\">\n                      <Input\n                        label=\"Description\"\n                        name=\"description\"\n                        placeholder=\"description...\"\n                      />\n                    </div>\n\n                    <div className=\"col-12\">\n                      <RichEditor\n                        label=\"Content\"\n                        name=\"htmlContent\"\n                        className=\"w-100\"\n                      />\n                    </div>\n                  </>\n                )}\n\n                <div className=\"col-12 text-center\">\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  };\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\">\n        <Card className=\"shadow\">\n          <CardHeader>\n            <div className=\"clearfix\">\n              <h2 className=\"mb-0 float-left\">\n                {identifier === \"add\" ? \"Add Post\" : post.title}\n              </h2>\n            </div>\n          </CardHeader>\n          <CardBody className=\"bg-secondary\">{renderPostForm()}</CardBody>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ModifyPost;\n"],"sourceRoot":""}